basePath: /api/v1
definitions:
  server.HandleCreateUser.request:
    properties:
      age:
        example: 25
        type: integer
      email:
        example: alonso12.dev@gmail.com
        type: string
      first_name:
        example: Alonso
        type: string
      last_name:
        example: Hdez
        type: string
      name:
        example: Jorge Luis
        type: string
      phone:
        example: "7713037204"
        type: string
      position:
        example: Go developer
        type: string
    type: object
  server.HandleCreateUser.response:
    properties:
      datetime:
        type: string
      http_code:
        type: integer
      status:
        type: string
      timestamp:
        type: integer
      user:
        $ref: '#/definitions/server.userAddResponse'
    type: object
  server.HandleGetUserByEmail.response:
    properties:
      datetime:
        type: string
      http_code:
        type: integer
      status:
        type: string
      timestamp:
        type: integer
      user:
        $ref: '#/definitions/server.userGetResponse'
    type: object
  server.HandleGetUsers.response:
    properties:
      datetime:
        type: string
      http_code:
        type: integer
      status:
        type: string
      timestamp:
        type: integer
      user:
        items:
          $ref: '#/definitions/server.userGetResponse'
        type: array
    type: object
  server.errorResponse:
    properties:
      datetime:
        type: string
      details:
        type: object
      error:
        type: string
      http_code:
        type: integer
      status:
        type: string
      timestamp:
        type: integer
    type: object
  server.userAddResponse:
    properties:
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      name:
        type: string
    type: object
  server.userGetResponse:
    properties:
      age:
        type: integer
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      name:
        type: string
      phone:
        type: string
      position:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Testing Swagger APIs.
  termsOfService: http://swagger.io/terms/
  title: Go RESTful API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Description...
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/server.HandleGetUsers.response'
        "500":
          description: Error Internal Server
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - JWT: []
      summary: Get users.
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Description...
      parameters:
      - description: User params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.HandleCreateUser.request'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/server.HandleCreateUser.response'
        "400":
          description: Invalid Request
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Error Internal Server
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - JWT: []
      summary: Create user.
      tags:
      - User
  /users/{email}:
    get:
      consumes:
      - application/json
      description: Description...
      parameters:
      - description: Email user
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/server.HandleGetUserByEmail.response'
        "500":
          description: Error Internal Server
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - JWT: []
      summary: Get user by email.
      tags:
      - User
schemes:
- http
- https
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
